<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="panako" name="Create the Panako JAR-file">

	<!-- Configuration -->
	<property name="version" value="2.0" />
	
	<!-- Run the ant timestamp task -->
	<tstamp />

	<!-- Clean the build system -->
	<target name="clean">
		<delete dir="../bin" />
		<delete dir="../doc/javadoc" />
		<delete dir="Panako-${version}" />
		<delete file="panako-${version}.jar" />
	</target>

	<!-- Compiles the java files to bytecode and copy required resources -->
	<target name="compile">
		<mkdir dir="../bin" />
		<javac srcdir="../src" destdir="../bin" includeantruntime="false" target="1.8"  source="1.8">
			<classpath>
				<fileset file="${junit_jar}"/>
				<fileset dir="../lib" includes="*.jar" excludes="*src*.jar"  />
				<fileset dir="../lib/mapdb" includes="*.jar" excludes="*src*.jar"  />
				<fileset dir="../lib/lmdb" includes="*.jar" excludes="*src*.jar"  />
			</classpath>
		</javac>
	</target>
	
	<!-- Creates javadoc in ../doc/javadoc directory -->
	<target name="javadoc">
		<javadoc access="public" 
			author="true" 
			destdir="../doc/javadoc"
			doctitle="Panako ${version}-${DSTAMP}" 
			nodeprecated="false" 
			nodeprecatedlist="false" 
			noindex="false" 
			nonavbar="false"
			notree="false"
			source="11" 
			sourcepath="../src" 
			splitindex="true" 
			use="true" 
			version="true" >	
				<classpath>
					<fileset dir="../lib" includes="*.jar" excludes="*src*.jar"  />
					<fileset dir="../lib/mapdb" includes="*.jar" excludes="*src*.jar"  />
					<fileset dir="../lib/lmdb" includes="*.jar" excludes="*src*.jar"  />
				</classpath>
			</javadoc>
	</target>
	
	<!-- Creates index.html with info about panako in ../doc/ directory -->
	<target name="doc" depends="javadoc"> 
    	<exec dir="../doc/etc" executable="./docs2html"/>
    </target>

	<!-- Creates the Panako executable JAR-File client -->
	<target name="panako" depends="compile">
		<!-- with source code panako-${version}.jar -->
		<jar destfile="panako-${version}.jar" filesetmanifest="skip">
			
			<zipgroupfileset dir="../lib/" includes="*.jar"/><!-- panako dependencies -->
			<zipgroupfileset dir="../lib/mapdb/" includes="*.jar"/><!-- mapdb jar files -->	
			<zipgroupfileset dir="../lib/lmdb/" includes="*.jar"/><!-- mapdb jar files -->
    		
			<!-- exclude everything except src dir -->
			<fileset dir="../bin">
				<exclude name="**/*.wav" />
				<exclude name="**/test/**" />
			</fileset>

			<!-- include source files -->
			<fileset dir="../src">
				<include name="**/*.java" />
			</fileset>
			
			<!-- include API readme -->
			<fileset file="../src/be/panako/http/api.html" />
			
			<manifest>
				<!-- Standard manifest attributes -->
				<attribute name="Implementation-Version" value="${version}-${DSTAMP}" />
				<attribute name="Built-By" value="${built_by}" />
				<attribute name="Created-By" value="${built_by}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Main-Class" value="be.panako.cli.Panako" />
			</manifest>
			
		</jar>
	</target>
	
	<!-- Creates the executable JAR-File -->
	<target name="syncsink" depends="compile">
		<!-- with source code panako-${version}.jar -->
		<jar destfile="SyncSink-${version}.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<!-- Standard manifest attributes -->
				<attribute name="Implementation-Version" value="${version}-${DSTAMP}" />
				<attribute name="Built-By" value="${built_by}" />
				<attribute name="Created-By" value="${built_by}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Main-Class" value="be.panako.ui.syncsink.SyncSink" />
			</manifest>
			
			<zipgroupfileset dir="../lib/" includes="*.jar"/><!-- panako dependencies -->
			<zipgroupfileset dir="../lib/mapdb/" includes="*.jar"/><!-- mapdb jar files -->	
			<zipgroupfileset dir="../lib/lmdb/" includes="*.jar"/><!-- mapdb jar files -->
    		
			<!-- exclude everything except src dir -->
			<fileset dir="../bin">
				<exclude name="**/*.wav" />
				<exclude name="**/test/**" />
			</fileset>

			<!-- include source files -->
			<fileset dir="../src">
				<include name="**/*.java" />
			</fileset>
			
			<!-- include API readme -->
			<fileset file="../src/be/panako/http/api.html" />
		</jar>
	</target>

	<!-- builds a release: all examples, documentation and library in the correct folders-->
	<target name="release" depends="doc,javadoc">
		
	    <mkdir dir="Panako-${version}"/>
	  	<move file="../doc/index.html" tofile="Panako-${version}/readme.html"/>
		<copy file="../license.txt" tofile="Panako-${version}/LICENSE"/>
		
		<copy  todir="Panako-${version}/doc/">
			<fileset dir="../doc/javadoc"/>
		</copy>
		
		 <zip destfile="Panako-${version}/Panako-${version}-src.zip">
		 	<zipfileset dir="../src" prefix="Panako/src/"/>
		 	<zipfileset dir="../lib" prefix="Panako/lib/"/>
		 	<zipfileset dir="../build" prefix="Panako/build/" >
		 		<exclude name="**/Panako-*/**"/>
		 	</zipfileset>
		 	
		 	<zipfileset dir="../doc" prefix="Panako/doc/" ></zipfileset>
		 	<zipfileset dir="Panako-${version}" includes="readme.html" fullpath="Panako/readme.html"/>
		 	<zipfileset dir="Panako-${version}" includes="LICENSE" fullpath="Panako/LICENSE"/>
		 </zip>
	</target>
	
	<!-- Installs the panako jar file to /opt/panako -->
	<target name="install" depends="panako">
		 <!-- Create the panako directory, if it does not exist -->
		 <mkdir dir="/opt/panako/log"/>
		 <!-- Copy the panako execute script -->
		 <copy file="../doc/panako" tofile="/opt/panako/panako"/>
		 <!-- Copy the main jar file -->
	     <copy file="panako-${version}.jar" tofile="/opt/panako/panako.jar"/>
		 <!-- Copy the default logging configuration -->
	     <copy file="../doc/logging.properties" tofile="/opt/panako/logging.properties"/>
		 <!-- Do not copy the configuration itself  -->
		 <!-- <copy file="config.properties" tofile="/opt/panako/config.properties"/>-->
	</target>
</project>
